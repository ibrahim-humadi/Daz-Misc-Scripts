// DAZ Studio version 4.22.0.16 filetype DAZ Script

(function() {
    function exportSelected(path, fileName) {
        var exportMgr = App.getExportMgr();
        var exporter = exportMgr.findExporterByClassName("DzObjExporter");
        if (exporter) {
            var settings = new DzFileIOSettings();
            settings.setFloatValue("Scale", 1);
            settings.setStringValue("LatAxis", "X");
            settings.setStringValue("VertAxis", "Y");
            settings.setStringValue("DepthAxis", "Z");
            settings.setBoolValue("InvertLat", false);
            settings.setBoolValue("InvertVert", false);
            settings.setBoolValue("InvertDepth", false);
            settings.setBoolValue("IgnoreInvisible", true);
            settings.setBoolValue("RemoveUnusedVerts", false);
            settings.setBoolValue("WriteVT", true);
            settings.setBoolValue("WriteVN", true);
            settings.setBoolValue("SelectedOnly", true);
            settings.setBoolValue("WriteUsemtl", false);
            settings.setBoolValue("SelectedRootsOnly", true);
            settings.setIntValue("RunSilent", 1);
            exporter.writeFile(path + "/" + fileName + ".obj", settings);
        }
    }

    var path = FileDialog.doDirectoryDialog(qsTr("Please select a Directory to output .obj files"));
    if (!path) {
        MessageBox.warning("Export cancelled.");
        return;
    }

    var figure = Scene.getSelectedNode(0); // Ensure the main figure is selected
    if (!figure) {
        MessageBox.warning("No figure selected.");
        return;
    }

    var follower = Scene.getSelectedNode(1); // Assume the follower is also selected
    if (!follower) {
        MessageBox.warning("No follower selected.");
        return;
    }
    
    figure.select(false);

    var propCount = figure.getNumProperties();
    var object = figure.getObject();
    var noMods = object.getNumModifiers();

    // Iterate over favorited properties of the figure
    for (var i = 0; i < propCount; i++) {
        var prop = figure.getProperty(i);
        if (prop.isFavorite()) {
            // Set the property to its max value and export the follower
            prop.setValue(prop.getMax());
            exportSelected(path, prop.name);

            // Reset the property to its default value
            prop.reset(DzProperty.ResetDefault);
        }
    }

    // Iterate over favorited modifiers (morphs) of the figure
    for (var i = 0; i < noMods; i++) {
        var mod = object.getModifier(i);
        if (mod.className() === "DzMorph") {
            var modProp = mod.getValueControl();
            if (modProp && modProp.isFavorite()) {
                // Set the modifier to its max value and export the follower
                modProp.setValue(modProp.getMax());
                exportSelected(path, mod.name);

                // Reset the modifier to its default value
                modProp.reset(DzProperty.ResetDefault);
            }
        }
    }
})();
