// DAZ Studio version 4.22.0.1 filetype DAZ Script

(function(){

	function exportSelected(path, groupName)
	{
		var exportMgr = App.getExportMgr();
		var exporter = exportMgr.findExporterByClassName("DzObjExporter");
		if( exporter ){
			var settings = new DzFileIOSettings();
			settings.setFloatValue( "Scale", 1 );
			settings.setStringValue( "LatAxis", "X" );
			settings.setStringValue( "VertAxis", "Y" );
			settings.setStringValue( "DepthAxis", "Z" );
			settings.setBoolValue( "InvertLat", false );
			settings.setBoolValue( "InvertVert", false );
			settings.setBoolValue( "InvertDepth", false );
			settings.setBoolValue( "IgnoreInvisible", true );
			settings.setBoolValue( "RemoveUnusedVerts", false );
			settings.setBoolValue( "WriteVT", true );
			settings.setBoolValue( "WriteVN", true );
			settings.setBoolValue( "SelectedOnly", true );
			settings.setBoolValue( "WriteUsemtl", false );    
			settings.setBoolValue( "", false );
			settings.setBoolValue( "SelectedRootsOnly", true );
			settings.setIntValue( "RunSilent", 1 );
			exporter.writeFile( path + "/" + groupName + ".obj", settings );
		}
	};

	var filePath = FileDialog.doFileDialog(qsTr("Please select your morphList.txt"), "*.txt");
	if (!filePath) {
		MessageBox.warning("File selection cancelled.");
		return;
	}
	var path = filePath.substring(0, filePath.lastIndexOf("/"));
	var file = new DzFile(filePath);
	var figure = Scene.getPrimarySelection();
	var propCount = figure.getNumProperties();
	var object = figure.getObject();
	var noMods = object.getNumModifiers();

	if (file.open(DzFile.ReadOnly)) {
		var groupName = "";
		var morphList = [];
		while (!file.eof()) {
			var line = file.readLine().trim();

			if (line.startsWith("//")) {
				if (groupName && morphList.length > 0) {
					for (var i = 0; i < morphList.length; i++) {
						var morph = morphList[i];
						var morphName = morph.name;
						var value = morph.value;
						var found = false;

						for (var j = 0; j < propCount; j++) {
							var prop = figure.getProperty(j);
							if (prop.name === morphName) {
								prop.setValue(value === "max" ? prop.getMax() : parseFloat(value));
								found = true;
								break;
							}
						}

						if (!found) {
							for (var k = 0; k < noMods; k++) {
								var mod = object.getModifier(k);
								if (mod.className() === "DzMorph" && mod.name === morphName) {
									var modProp = mod.getValueControl();
									modProp.setValue(value === "max" ? modProp.getMax() : parseFloat(value));
									found = true;
									break;
								}
							}
						}

						if (!found) {
							print("Morph '" + morphName + "' not found on the figure.");
						}
					}

					exportSelected(path, groupName);

					for (var i = 0; i < morphList.length; i++) {
						var morph = morphList[i];
						var morphName = morph.name;
						for (var j = 0; j < propCount; j++) {
							var prop = figure.getProperty(j);
							if (prop.name === morphName) {
								prop.reset(DzProperty.ResetDefault);
								break;
							}
						}

						for (var k = 0; k < noMods; k++) {
							var mod = object.getModifier(k);
							if (mod.className() === "DzMorph" && mod.name === morphName) {
								var modProp = mod.getValueControl();
								modProp.reset(DzProperty.ResetDefault);
								break;
							}
						}
					}

					morphList = [];
				}
				groupName = line.replace("//", "").trim();
			} else if (line) {
				var parts = line.split("//");
				var morphName = parts[0].trim();
				var value = parts[1].trim();
				morphList.push({ name: morphName, value: value });
			}
		}

		if (groupName && morphList.length > 0) {
			for (var i = 0; i < morphList.length; i++) {
				var morph = morphList[i];
				var morphName = morph.name;
				var value = morph.value;
				var found = false;

				for (var j = 0; j < propCount; j++) {
					var prop = figure.getProperty(j);
					if (prop.name === morphName) {
						prop.setValue(value === "max" ? prop.getMax() : parseFloat(value));
						found = true;
						break;
					}
				}

				if (!found) {
					for (var k = 0; k < noMods; k++) {
						var mod = object.getModifier(k);
						if (mod.className() === "DzMorph" && mod.name === morphName) {
							var modProp = mod.getValueControl();
							modProp.setValue(value === "max" ? modProp.getMax() : parseFloat(value));
							found = true;
							break;
						}
					}
				}

				if (!found) {
					print("Morph '" + morphName + "' not found on the figure.");
				}
			}

			exportSelected(path, groupName);

			for (var i = 0; i < morphList.length; i++) {
				var morph = morphList[i];
				var morphName = morph.name;
				for (var j = 0; j < propCount; j++) {
					var prop = figure.getProperty(j);
					if (prop.name === morphName) {
						prop.reset(DzProperty.ResetDefault);
						break;
					}
				}

				for (var k = 0; k < noMods; k++) {
					var mod = object.getModifier(k);
					if (mod.className() === "DzMorph" && mod.name === morphName) {
						var modProp = mod.getValueControl();
						modProp.reset(DzProperty.ResetDefault);
						break;
					}
				}
			}
		}

		file.close();
	} else {
		MessageBox.critical("Could not open morphList.txt.");
		return;
	}
	
})();
